name: üöÄ Deploy to Staging

on:
  push:
    branches: [staging]

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  deploy:
    needs: detect
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      ### -------- Build frontend --------
      - name: Setup Node (for frontend)
        if: needs.detect.outputs.frontend == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - name: Cache npm dependencies
        if: needs.detect.outputs.frontend == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Debug - Check environment variables
        if: needs.detect.outputs.frontend == 'true'
        env:
          VITE_PUSHER_APP_KEY: ${{ secrets.VITE_PUSHER_APP_KEY }}
          VITE_PUSHER_APP_CLUSTER: ${{ secrets.VITE_PUSHER_APP_CLUSTER }}
        run: |
          echo "Checking if secrets are set..."
          if [ -z "$VITE_PUSHER_APP_KEY" ]; then
            echo "‚ùå VITE_PUSHER_APP_KEY is NOT set!"
          else
            echo "‚úÖ VITE_PUSHER_APP_KEY is set (length: ${#VITE_PUSHER_APP_KEY} chars)"
          fi
          
          if [ -z "$VITE_PUSHER_APP_CLUSTER" ]; then
            echo "‚ùå VITE_PUSHER_APP_CLUSTER is NOT set!"
          else
            echo "‚úÖ VITE_PUSHER_APP_CLUSTER is set: $VITE_PUSHER_APP_CLUSTER"
          fi

      - name: Install & build frontend
        if: needs.detect.outputs.frontend == 'true'
        env:
          VITE_SECRET_KEY: ${{ secrets.VITE_SECRET_KEY }}
          VITE_PUSHER_APP_KEY: ${{ secrets.VITE_PUSHER_APP_KEY }}
          VITE_PUSHER_APP_CLUSTER: ${{ secrets.VITE_PUSHER_APP_CLUSTER }}
          VITE_PUSHER_PORT: ${{ secrets.VITE_PUSHER_PORT }}
          VITE_PUSHER_SCHEME: ${{ secrets.VITE_PUSHER_SCHEME }}
        run: |
          cd frontend
          npm ci
          echo "Building with Vite..."
          npm run build

      - name: Verify frontend build output
        if: needs.detect.outputs.frontend == 'true'
        run: ls -l ./frontend/dist

      - name: Debug - Check if Pusher key in build
        if: needs.detect.outputs.frontend == 'true'
        run: |
          echo "Checking if Pusher configuration is in the built files..."
          cd frontend/dist
          
          # Check if any JS files exist
          if ls assets/*.js 1> /dev/null 2>&1; then
            echo "‚úÖ JavaScript files found in build"
            
            # Check for Pusher references (don't print actual keys)
            if grep -l "pusher" assets/*.js > /dev/null 2>&1; then
              echo "‚úÖ Pusher references found in build"
            else
              echo "‚ùå WARNING: No Pusher references found in build!"
            fi
            
            # Check for cluster config
            if grep -l "cluster" assets/*.js > /dev/null 2>&1; then
              echo "‚úÖ Cluster configuration found in build"
            else
              echo "‚ùå WARNING: No cluster configuration found!"
            fi
          else
            echo "‚ùå ERROR: No JavaScript files found in build!"
            exit 1
          fi

      - name: Deploy frontend to staging
        if: needs.detect.outputs.frontend == 'true'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          local-dir: ./frontend/dist/
          server-dir: ./staging/
          exclude: |
            **/.git*
            **/.github*
            
          ### -------- Deploy backend --------
      - name: Deploy backend to staging
        if: needs.detect.outputs.backend == 'true'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          local-dir: ./backend/
          server-dir: ./staging/api/
          exclude: |
            **/.git*
            **/.github*

      - name: Install composer dependencies via SSH
        if: needs.detect.outputs.backend == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u423729572/domains/prenatal-appointment-tagoloan.com/public_html/staging/api
            composer install --no-dev --optimize-autoloader --no-interaction --no-scripts

      - name: Clear Laravel caches via SSH
        if: needs.detect.outputs.backend == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u423729572/domains/prenatal-appointment-tagoloan.com/public_html/staging/api
            composer dump-autoload --optimize --no-dev
            php artisan package:discover --ansi
            php artisan config:clear
            php artisan cache:clear
            php artisan route:clear
            php artisan view:clear
            php artisan optimize:clear